version: "3.8"

services:
  app:
    build: server
    command: >
      sh -c 'printenv | grep -E "NODE_VERSION|NODE_ENV|PORT|POSTGRES_USER|POSTGRES_DB";
           if [ "$NODE_ENV" = "production" ]; 
           then npm run production; 
           else npm run dev; 
           fi'
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./server:/app # Mount the current app directory as a volume
      - /app/node_modules # Exclude node_modules directory from the volume

  db:
    image: postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    build: server
    command: >
      sh -c 'npm run migrate:up'
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./server/migrations:/app/migrations
volumes:
  postgres:
